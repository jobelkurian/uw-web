/**
 * This script is designed to parse usfm files, and generate the appropriate HTML for each chapter of the books of the Bible.
 * The HTML is based on what is appropriate for this app.  To use this generator, add `uw_usfm` in the generator section
 * of your info.json file.
 *
 * @author Johnathan Pulos <johnathan@missionaldigerati.org>
 */
var uwGenerateUsfm = function() {
  /**
   * This classes main object
   *
   * @type {Object}
   * @access private
   */
  var uwObject = {};
  /**
   * Nodejs package filesystem for writing files
   *
   * @type {Object}
   * @access private
   */
  var fileSystem = require('fs');
  /**
   * Nodejs package path for generating correct pathing
   *
   * @type {Object}
   * @access private
   */
  var path = require('path');
  /**
   * The base path to the folder containing the USFM files
   *
   * @type {String}
   * @access private
   */
  var inputBasePath = '';
  /**
   * The main method for generating the appropriate HTML for each USFM tag.  This method does the following:
   * 1) Iterates over all the files (Note:: Each file holds one book of the Bible) in inputBasePath that has a .usfm extension
   * 2) Iterates over each line in the file
   * 3) Parses the USFM file and generates the appropriate HTML for each chapter in the book
   * 4) Return an JSON Object with various information about the book including the chapter html
   * 
   * In the Chapter data object, each chapter contains the folowing data:
   * 
   *  { id: 'RV21',
   *    html: 'HTML FOR THE CHAPTER',
   *    notes: '',
   *    previd: 'RV20',
   *    nextid: 'RV22' 
   *  }
   *
   * @param  {String}   inputBasePath   The path to the folder containing the USFM files
   * @param  {Object}   info            The JSON object of information in the info.json file in the inputBasePath
   * @param  {Boolean}  createIndex     Do you want to create an index of the verses? (See verse_indexer.js)    
   * @param  {callback} startProgress   The callback to start the progress bar
   * @param  {callback} updateProgress  The callback for updating the current progress
   *
   * @return {Object}                   A JSON object containing chapterData, indexData, indexLemmaData, and aboutHtml
   *
   * @author Johnathan Pulos <johnathan@missionaldigerati.org>
   */
  uwObject.generate = function(_inputBasePath, info, createIndex, startProgress, updateProgress) {
    inputBasePath = _inputBasePath;
    /**
     * This is the returned object of this method.
     *
     * @type {Object}
     */
    var bibleData = {
      chapterData:    [],
      indexData:      {},
      indexLemmaData: {},
      aboutHtml:      ''
    };
    bibleData.aboutHtml = getAboutContent();

    /**
     * Return the Bible data
     */
    return bibleData;
  };
  /**
   * Private methods
   */
  /**
   * Check whether there is an about.html file in the inputBasePath, if so return it's contents.
   * If not, then return an empty string.
   *
   * @return {String} An HTML string containing information about the Bible
   *
   * @author Johnathan Pulos <johnathan@missionaldigerati.org>
   */
  function getAboutContent() {
    var aboutPath = path.join(inputBasePath, 'about.html');
    if (fileSystem.existsSync(aboutPath)) {
      return fileSystem.readFileSync(aboutPath, 'utf8');
    }
    return '';
  };
  /**
   * Return this object
   */
  return uwObject;
};
/**
 * Expose the library
 *
 */
uw = new uwGenerateUsfm;
exports = module.exports = uw;